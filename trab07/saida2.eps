%!PS-Adobe-2.0
%%Title: saida2.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Tue Sep 14 16:41:28 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (saida2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Atila Romero,aluno_grad,144679,\(\)- )
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep 14 16:41:28 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
574 280 M
63 0 V
6325 0 R
-63 0 V
stroke
490 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
574 739 M
63 0 V
6325 0 R
-63 0 V
stroke
490 739 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
574 1198 M
63 0 V
6325 0 R
-63 0 V
stroke
490 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
574 1658 M
63 0 V
6325 0 R
-63 0 V
stroke
490 1658 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MRshow
1.000 UL
LTb
574 2117 M
63 0 V
6325 0 R
-63 0 V
stroke
490 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
574 2576 M
63 0 V
6325 0 R
-63 0 V
stroke
490 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
574 3035 M
63 0 V
6325 0 R
-63 0 V
stroke
490 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
574 3494 M
63 0 V
6325 0 R
-63 0 V
stroke
490 3494 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MRshow
1.000 UL
LTb
574 3954 M
63 0 V
6325 0 R
-63 0 V
stroke
490 3954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
574 4413 M
63 0 V
6325 0 R
-63 0 V
stroke
490 4413 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
1.000 UL
LTb
574 4872 M
63 0 V
6325 0 R
-63 0 V
stroke
490 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
574 280 M
0 63 V
0 4529 R
0 -63 V
stroke
574 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1213 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1213 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1852 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1852 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
2490 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2490 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
3129 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3129 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
3768 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3768 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MCshow
1.000 UL
LTb
4407 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4407 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
5046 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5046 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 700)]
] -46.7 MCshow
1.000 UL
LTb
5684 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5684 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
6323 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6323 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 900)]
] -46.7 MCshow
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6962 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
574 4872 N
574 280 L
6388 0 V
0 4592 V
-6388 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (dados)]
] -46.7 MRshow
LT0
574 3371 Pls
580 3590 Pls
587 2134 Pls
593 3714 Pls
600 3117 Pls
606 4465 Pls
612 4773 Pls
619 3733 Pls
625 2858 Pls
631 443 Pls
638 919 Pls
644 2243 Pls
651 4395 Pls
657 1193 Pls
663 538 Pls
670 2454 Pls
676 3385 Pls
683 1393 Pls
689 4853 Pls
695 2551 Pls
702 3096 Pls
708 2172 Pls
715 4489 Pls
721 702 Pls
727 1921 Pls
734 3473 Pls
740 4618 Pls
746 909 Pls
753 2793 Pls
759 1176 Pls
766 944 Pls
772 1292 Pls
778 4486 Pls
785 2799 Pls
791 4726 Pls
798 2731 Pls
804 2392 Pls
810 4627 Pls
817 1592 Pls
823 378 Pls
830 4790 Pls
836 2231 Pls
842 2341 Pls
849 4312 Pls
855 3144 Pls
861 2599 Pls
868 1894 Pls
874 1657 Pls
881 3713 Pls
887 1875 Pls
893 3928 Pls
900 1937 Pls
906 3767 Pls
913 3545 Pls
919 2359 Pls
925 816 Pls
932 2146 Pls
938 2105 Pls
945 1445 Pls
951 4658 Pls
957 3001 Pls
964 2110 Pls
970 1079 Pls
976 2615 Pls
983 4628 Pls
989 933 Pls
996 474 Pls
1002 2148 Pls
1008 688 Pls
1015 1786 Pls
1021 2246 Pls
1028 605 Pls
1034 3736 Pls
1040 4307 Pls
1047 4638 Pls
1053 2008 Pls
1059 2034 Pls
1066 1659 Pls
1072 3385 Pls
1079 875 Pls
1085 3255 Pls
1091 2441 Pls
1098 2531 Pls
1104 2150 Pls
1111 1113 Pls
1117 4610 Pls
1123 2685 Pls
1130 2979 Pls
1136 1843 Pls
1143 3851 Pls
1149 2765 Pls
1155 4563 Pls
1162 1088 Pls
1168 3564 Pls
1174 2306 Pls
1181 845 Pls
1187 4217 Pls
1194 2500 Pls
1200 2713 Pls
1206 4625 Pls
1213 4005 Pls
1219 4678 Pls
1226 358 Pls
1232 2870 Pls
1238 4113 Pls
1245 4715 Pls
1251 4598 Pls
1258 1275 Pls
1264 1503 Pls
1270 3111 Pls
1277 1870 Pls
1283 4478 Pls
1289 680 Pls
1296 4121 Pls
1302 1755 Pls
1309 1513 Pls
1315 3859 Pls
1321 4160 Pls
1328 4212 Pls
1334 830 Pls
1341 3139 Pls
1347 2105 Pls
1353 521 Pls
1360 3947 Pls
1366 797 Pls
1372 2547 Pls
1379 4512 Pls
1385 4734 Pls
1392 4767 Pls
1398 2352 Pls
1404 4487 Pls
1411 3900 Pls
1417 2158 Pls
1424 4564 Pls
1430 1898 Pls
1436 1399 Pls
1443 4408 Pls
1449 1624 Pls
1456 2394 Pls
1462 1039 Pls
1468 4455 Pls
1475 3984 Pls
1481 644 Pls
1487 4855 Pls
1494 3233 Pls
1500 2119 Pls
1507 1496 Pls
1513 2220 Pls
1519 1408 Pls
1526 836 Pls
1532 2770 Pls
1539 4267 Pls
1545 2661 Pls
1551 3011 Pls
1558 3342 Pls
1564 3178 Pls
1571 686 Pls
1577 2982 Pls
1583 3040 Pls
1590 581 Pls
1596 462 Pls
1602 2655 Pls
1609 4202 Pls
1615 2340 Pls
1622 2347 Pls
1628 1228 Pls
1634 3460 Pls
1641 1883 Pls
1647 2572 Pls
1654 982 Pls
1660 2641 Pls
1666 2156 Pls
1673 4686 Pls
1679 3006 Pls
1686 2138 Pls
1692 3047 Pls
1698 4845 Pls
1705 3354 Pls
1711 395 Pls
1717 1381 Pls
1724 3910 Pls
1730 2885 Pls
1737 775 Pls
1743 1699 Pls
1749 1024 Pls
1756 3837 Pls
1762 4597 Pls
1769 1430 Pls
1775 1947 Pls
1781 2765 Pls
1788 1731 Pls
1794 2129 Pls
1800 548 Pls
1807 1061 Pls
1813 4190 Pls
1820 2615 Pls
1826 2009 Pls
1832 2778 Pls
1839 4218 Pls
1845 4301 Pls
1852 3480 Pls
1858 1987 Pls
1864 1585 Pls
1871 3294 Pls
1877 4713 Pls
1884 3443 Pls
1890 1470 Pls
1896 4685 Pls
1903 1926 Pls
1909 1585 Pls
1915 1194 Pls
1922 964 Pls
1928 4191 Pls
1935 1689 Pls
1941 2383 Pls
1947 343 Pls
1954 655 Pls
1960 2108 Pls
1967 1493 Pls
1973 2322 Pls
1979 4593 Pls
1986 2944 Pls
1992 4171 Pls
1999 4861 Pls
2005 3725 Pls
2011 3488 Pls
2018 2603 Pls
2024 863 Pls
2030 1394 Pls
2037 1949 Pls
2043 292 Pls
2050 4594 Pls
2056 3656 Pls
2062 1597 Pls
2069 3016 Pls
2075 3497 Pls
2082 4760 Pls
2088 4206 Pls
2094 3310 Pls
2101 1814 Pls
2107 919 Pls
2114 4224 Pls
2120 2498 Pls
2126 4830 Pls
2133 1041 Pls
2139 4601 Pls
2145 300 Pls
2152 1416 Pls
2158 1836 Pls
2165 1513 Pls
2171 3457 Pls
2177 1557 Pls
2184 4177 Pls
2190 2756 Pls
2197 1546 Pls
2203 3031 Pls
2209 1373 Pls
2216 3870 Pls
2222 3613 Pls
2228 2486 Pls
2235 947 Pls
2241 3625 Pls
2248 2208 Pls
2254 4323 Pls
2260 350 Pls
2267 352 Pls
2273 2947 Pls
2280 4830 Pls
2286 4279 Pls
2292 1385 Pls
2299 1772 Pls
2305 326 Pls
2312 737 Pls
2318 3990 Pls
2324 284 Pls
2331 1498 Pls
2337 3719 Pls
2343 305 Pls
2350 2634 Pls
2356 683 Pls
2363 1538 Pls
2369 1219 Pls
2375 1961 Pls
2382 843 Pls
2388 3695 Pls
2395 3227 Pls
2401 3594 Pls
2407 4788 Pls
2414 2225 Pls
2420 2335 Pls
2427 2402 Pls
2433 2891 Pls
2439 1088 Pls
2446 4331 Pls
2452 2342 Pls
2458 1158 Pls
2465 4403 Pls
2471 417 Pls
2478 1117 Pls
2484 3810 Pls
2490 1522 Pls
2497 2609 Pls
2503 3856 Pls
2510 1979 Pls
2516 1727 Pls
2522 3860 Pls
2529 3197 Pls
2535 574 Pls
2542 3884 Pls
2548 959 Pls
2554 977 Pls
2561 550 Pls
2567 1898 Pls
2573 2658 Pls
2580 1113 Pls
2586 721 Pls
2593 1013 Pls
2599 4427 Pls
2605 637 Pls
2612 2958 Pls
2618 1890 Pls
2625 2760 Pls
2631 977 Pls
2637 2698 Pls
2644 2218 Pls
2650 3039 Pls
2656 3576 Pls
2663 1749 Pls
2669 3175 Pls
2676 4413 Pls
2682 687 Pls
2688 4417 Pls
2695 2150 Pls
2701 4263 Pls
2708 1524 Pls
2714 3597 Pls
2720 3250 Pls
2727 4441 Pls
2733 3892 Pls
2740 2262 Pls
2746 528 Pls
2752 4589 Pls
2759 2532 Pls
2765 2146 Pls
2771 2375 Pls
2778 3365 Pls
2784 2587 Pls
2791 3108 Pls
2797 2920 Pls
2803 2945 Pls
2810 1194 Pls
2816 4530 Pls
2823 833 Pls
2829 1891 Pls
2835 2356 Pls
2842 2771 Pls
2848 4649 Pls
2855 1061 Pls
2861 4240 Pls
2867 2953 Pls
2874 602 Pls
2880 4647 Pls
2886 2498 Pls
2893 2472 Pls
2899 4038 Pls
2906 3742 Pls
2912 1197 Pls
2918 2416 Pls
2925 3312 Pls
2931 4809 Pls
2938 4399 Pls
2944 3559 Pls
2950 4526 Pls
2957 2059 Pls
2963 833 Pls
2969 2029 Pls
2976 552 Pls
2982 3141 Pls
2989 4857 Pls
2995 3193 Pls
3001 1214 Pls
3008 1179 Pls
3014 2851 Pls
3021 1766 Pls
3027 2790 Pls
3033 335 Pls
3040 4257 Pls
3046 2568 Pls
3053 1115 Pls
3059 3626 Pls
3065 648 Pls
3072 1437 Pls
3078 3401 Pls
3084 2866 Pls
3091 3629 Pls
3097 2567 Pls
3104 1737 Pls
3110 4546 Pls
3116 4703 Pls
3123 4768 Pls
3129 4483 Pls
3136 4229 Pls
3142 3456 Pls
3148 4138 Pls
3155 1417 Pls
3161 4009 Pls
3168 1295 Pls
3174 1689 Pls
3180 2278 Pls
3187 1280 Pls
3193 4601 Pls
3199 3212 Pls
3206 2180 Pls
3212 2580 Pls
3219 4698 Pls
3225 4690 Pls
3231 2635 Pls
3238 4083 Pls
3244 2385 Pls
3251 3470 Pls
3257 2837 Pls
3263 2754 Pls
3270 4627 Pls
3276 1366 Pls
3283 748 Pls
3289 3384 Pls
3295 3652 Pls
3302 2205 Pls
3308 3058 Pls
3314 3483 Pls
3321 2101 Pls
3327 2670 Pls
3334 2841 Pls
3340 685 Pls
3346 1935 Pls
3353 3977 Pls
3359 4414 Pls
3366 2950 Pls
3372 794 Pls
3378 1820 Pls
3385 3950 Pls
3391 524 Pls
3397 4752 Pls
3404 1258 Pls
3410 2824 Pls
3417 4578 Pls
3423 1075 Pls
3429 586 Pls
3436 3789 Pls
3442 3181 Pls
3449 3776 Pls
3455 1754 Pls
3461 1062 Pls
3468 3531 Pls
3474 2840 Pls
3481 1530 Pls
3487 2043 Pls
3493 1620 Pls
3500 3455 Pls
3506 4821 Pls
3512 4823 Pls
3519 684 Pls
3525 2619 Pls
3532 2792 Pls
3538 1089 Pls
3544 4275 Pls
3551 1897 Pls
3557 631 Pls
3564 2353 Pls
3570 2411 Pls
3576 2171 Pls
3583 1431 Pls
3589 2655 Pls
3596 2051 Pls
3602 2409 Pls
3608 607 Pls
3615 1757 Pls
3621 3204 Pls
3627 913 Pls
3634 674 Pls
3640 1513 Pls
3647 4409 Pls
3653 2148 Pls
3659 2295 Pls
3666 3068 Pls
3672 4708 Pls
3679 3545 Pls
3685 4832 Pls
3691 1456 Pls
3698 2128 Pls
3704 4781 Pls
3711 1408 Pls
3717 2532 Pls
3723 2528 Pls
3730 3920 Pls
3736 3341 Pls
3742 1931 Pls
3749 945 Pls
3755 3692 Pls
3762 4004 Pls
3768 3076 Pls
3774 991 Pls
3781 562 Pls
3787 860 Pls
3794 2762 Pls
3800 2691 Pls
3806 1186 Pls
3813 4238 Pls
3819 1023 Pls
3825 1819 Pls
3832 4632 Pls
3838 2256 Pls
3845 1357 Pls
3851 1908 Pls
3857 4271 Pls
3864 4145 Pls
3870 1744 Pls
3877 2944 Pls
3883 4105 Pls
3889 2920 Pls
3896 4792 Pls
3902 4014 Pls
3909 4048 Pls
3915 2453 Pls
3921 1670 Pls
3928 3096 Pls
3934 922 Pls
3940 3321 Pls
3947 3761 Pls
3953 4334 Pls
3960 2452 Pls
3966 1965 Pls
3972 453 Pls
3979 2734 Pls
3985 2545 Pls
3992 2934 Pls
3998 553 Pls
4004 3451 Pls
4011 2301 Pls
4017 1296 Pls
4024 398 Pls
4030 2061 Pls
4036 3272 Pls
4043 1475 Pls
4049 3690 Pls
4055 2671 Pls
4062 748 Pls
4068 562 Pls
4075 743 Pls
4081 4573 Pls
4087 3202 Pls
4094 663 Pls
4100 3714 Pls
4107 2378 Pls
4113 2836 Pls
4119 512 Pls
4126 602 Pls
4132 3477 Pls
4139 3552 Pls
4145 4082 Pls
4151 2939 Pls
4158 1132 Pls
4164 1175 Pls
4170 3112 Pls
4177 3587 Pls
4183 3440 Pls
4190 1174 Pls
4196 3860 Pls
4202 2019 Pls
4209 3195 Pls
4215 285 Pls
4222 2137 Pls
4228 384 Pls
4234 3277 Pls
4241 3332 Pls
4247 3794 Pls
4253 1076 Pls
4260 3800 Pls
4266 4076 Pls
4273 1538 Pls
4279 3501 Pls
4285 2406 Pls
4292 1922 Pls
4298 2343 Pls
4305 4505 Pls
4311 4477 Pls
4317 2575 Pls
4324 4826 Pls
4330 3083 Pls
4337 1255 Pls
4343 4037 Pls
4349 1150 Pls
4356 2108 Pls
4362 340 Pls
4368 3981 Pls
4375 823 Pls
4381 3500 Pls
4388 283 Pls
4394 4403 Pls
4400 647 Pls
4407 3199 Pls
4413 4407 Pls
4420 2505 Pls
4426 3303 Pls
4432 2812 Pls
4439 965 Pls
4445 2225 Pls
4452 3608 Pls
4458 4486 Pls
4464 1429 Pls
4471 4866 Pls
4477 3115 Pls
4483 3555 Pls
4490 1916 Pls
4496 586 Pls
4503 3188 Pls
4509 1521 Pls
4515 2881 Pls
4522 3142 Pls
4528 4323 Pls
4535 3856 Pls
4541 2307 Pls
4547 601 Pls
4554 1092 Pls
4560 2367 Pls
4566 4302 Pls
4573 1634 Pls
4579 995 Pls
4586 4306 Pls
4592 1165 Pls
4598 1363 Pls
4605 2632 Pls
4611 701 Pls
4618 3588 Pls
4624 1063 Pls
4630 3233 Pls
4637 4273 Pls
4643 3008 Pls
4650 1969 Pls
4656 3887 Pls
4662 4157 Pls
4669 1963 Pls
4675 2129 Pls
4681 2840 Pls
4688 3599 Pls
4694 2435 Pls
4701 1155 Pls
4707 4839 Pls
4713 444 Pls
4720 4017 Pls
4726 4291 Pls
4733 4020 Pls
4739 1452 Pls
4745 4612 Pls
4752 4831 Pls
4758 3539 Pls
4765 4042 Pls
4771 1594 Pls
4777 4254 Pls
4784 3476 Pls
4790 2479 Pls
4796 745 Pls
4803 1236 Pls
4809 2900 Pls
4816 4053 Pls
4822 2020 Pls
4828 1261 Pls
4835 3454 Pls
4841 4748 Pls
4848 2950 Pls
4854 2468 Pls
4860 4032 Pls
4867 4633 Pls
4873 4317 Pls
4880 2000 Pls
4886 3359 Pls
4892 1880 Pls
4899 2876 Pls
4905 3327 Pls
4911 2044 Pls
4918 2021 Pls
4924 2745 Pls
4931 1192 Pls
4937 3193 Pls
4943 2485 Pls
4950 1151 Pls
4956 1860 Pls
4963 1656 Pls
4969 2465 Pls
4975 1242 Pls
4982 4852 Pls
4988 4664 Pls
4994 1707 Pls
5001 1216 Pls
5007 2692 Pls
5014 888 Pls
5020 2956 Pls
5026 3674 Pls
5033 4061 Pls
5039 2831 Pls
5046 1751 Pls
5052 1658 Pls
5058 1992 Pls
5065 1512 Pls
5071 1103 Pls
5078 3712 Pls
5084 4591 Pls
5090 2703 Pls
5097 1716 Pls
5103 3046 Pls
5109 4467 Pls
5116 3457 Pls
5122 919 Pls
5129 787 Pls
5135 1778 Pls
5141 3125 Pls
5148 1658 Pls
5154 3358 Pls
5161 4500 Pls
5167 3843 Pls
5173 4320 Pls
5180 4480 Pls
5186 3635 Pls
5193 1155 Pls
5199 824 Pls
5205 1456 Pls
5212 1763 Pls
5218 3500 Pls
5224 4849 Pls
5231 952 Pls
5237 1459 Pls
5244 1728 Pls
5250 2330 Pls
5256 3171 Pls
5263 2960 Pls
5269 3153 Pls
5276 2011 Pls
5282 2680 Pls
5288 984 Pls
5295 3447 Pls
5301 853 Pls
5308 580 Pls
5314 2032 Pls
5320 1492 Pls
5327 1087 Pls
5333 3530 Pls
5339 4337 Pls
5346 2465 Pls
5352 2016 Pls
5359 3965 Pls
5365 1436 Pls
5371 1464 Pls
5378 3573 Pls
5384 4791 Pls
5391 2338 Pls
5397 4118 Pls
5403 1374 Pls
5410 3821 Pls
5416 2746 Pls
5422 1351 Pls
5429 4493 Pls
5435 3925 Pls
5442 2800 Pls
5448 1951 Pls
5454 2224 Pls
5461 888 Pls
5467 4823 Pls
5474 3956 Pls
5480 3288 Pls
5486 936 Pls
5493 2531 Pls
5499 3861 Pls
5506 1235 Pls
5512 4283 Pls
5518 482 Pls
5525 2042 Pls
5531 2941 Pls
5537 4539 Pls
5544 4227 Pls
5550 4677 Pls
5557 3632 Pls
5563 790 Pls
5569 1269 Pls
5576 2334 Pls
5582 709 Pls
5589 3327 Pls
5595 1579 Pls
5601 1803 Pls
5608 2276 Pls
5614 4045 Pls
5621 2875 Pls
5627 1897 Pls
5633 3098 Pls
5640 803 Pls
5646 3567 Pls
5652 450 Pls
5659 1411 Pls
5665 3519 Pls
5672 4125 Pls
5678 4419 Pls
5684 4175 Pls
5691 1784 Pls
5697 3408 Pls
5704 538 Pls
5710 1196 Pls
5716 3610 Pls
5723 2300 Pls
5729 3857 Pls
5736 3277 Pls
5742 1655 Pls
5748 3662 Pls
5755 2037 Pls
5761 2165 Pls
5767 4651 Pls
5774 4091 Pls
5780 2594 Pls
5787 3106 Pls
5793 798 Pls
5799 4117 Pls
5806 510 Pls
5812 4563 Pls
5819 2120 Pls
5825 2126 Pls
5831 2789 Pls
5838 2642 Pls
5844 822 Pls
5850 2958 Pls
5857 3773 Pls
5863 4061 Pls
5870 2212 Pls
5876 3320 Pls
5882 3363 Pls
5889 3716 Pls
5895 1856 Pls
5902 3621 Pls
5908 4632 Pls
5914 594 Pls
5921 1049 Pls
5927 3617 Pls
5934 3591 Pls
5940 2424 Pls
5946 2407 Pls
5953 756 Pls
5959 4309 Pls
5965 2186 Pls
5972 4566 Pls
5978 2030 Pls
5985 419 Pls
5991 492 Pls
5997 1275 Pls
6004 649 Pls
6010 4775 Pls
6017 3115 Pls
6023 2495 Pls
6029 2692 Pls
6036 885 Pls
6042 3037 Pls
6049 778 Pls
6055 4378 Pls
6061 2226 Pls
6068 2710 Pls
6074 2826 Pls
6080 717 Pls
6087 1555 Pls
6093 4402 Pls
6100 4058 Pls
6106 1314 Pls
6112 4716 Pls
6119 4828 Pls
6125 4651 Pls
6132 3435 Pls
6138 2380 Pls
6144 2186 Pls
6151 3911 Pls
6157 1816 Pls
6163 4092 Pls
6170 3605 Pls
6176 3567 Pls
6183 4231 Pls
6189 3818 Pls
6195 4562 Pls
6202 4600 Pls
6208 3721 Pls
6215 2805 Pls
6221 2223 Pls
6227 1541 Pls
6234 3410 Pls
6240 389 Pls
6247 2039 Pls
6253 2916 Pls
6259 2334 Pls
6266 4470 Pls
6272 870 Pls
6278 2771 Pls
6285 1152 Pls
6291 400 Pls
6298 1958 Pls
6304 2186 Pls
6310 4837 Pls
6317 1913 Pls
6323 1965 Pls
6330 3400 Pls
6336 4013 Pls
6342 3871 Pls
6349 2439 Pls
6355 957 Pls
6362 3091 Pls
6368 1172 Pls
6374 4244 Pls
6381 2450 Pls
6387 4709 Pls
6393 3934 Pls
6400 2178 Pls
6406 3558 Pls
6413 1867 Pls
6419 4121 Pls
6425 4819 Pls
6432 405 Pls
6438 4230 Pls
6445 1986 Pls
6451 3042 Pls
6457 1692 Pls
6464 1584 Pls
6470 3632 Pls
6477 4184 Pls
6483 2456 Pls
6489 3752 Pls
6496 1270 Pls
6502 4363 Pls
6508 3717 Pls
6515 2903 Pls
6521 1456 Pls
6528 2245 Pls
6534 2044 Pls
6540 455 Pls
6547 4403 Pls
6553 2721 Pls
6560 3266 Pls
6566 703 Pls
6572 2093 Pls
6579 844 Pls
6585 540 Pls
6591 1156 Pls
6598 2742 Pls
6604 3819 Pls
6611 2743 Pls
6617 1991 Pls
6623 3766 Pls
6630 2868 Pls
6636 1349 Pls
6643 880 Pls
6649 1038 Pls
6655 2762 Pls
6662 2184 Pls
6668 4390 Pls
6675 2073 Pls
6681 4360 Pls
6687 3270 Pls
6694 3063 Pls
6700 3851 Pls
6706 2115 Pls
6713 1094 Pls
6719 435 Pls
6726 4080 Pls
6732 2858 Pls
6738 610 Pls
6745 3612 Pls
6751 707 Pls
6758 3596 Pls
6764 4035 Pls
6770 2520 Pls
6777 4160 Pls
6783 4295 Pls
6790 3396 Pls
6796 2030 Pls
6802 3242 Pls
6809 1267 Pls
6815 3742 Pls
6821 2136 Pls
6828 3856 Pls
6834 4811 Pls
6841 2736 Pls
6847 4614 Pls
6853 2701 Pls
6860 4640 Pls
6866 4132 Pls
6873 4494 Pls
6879 4128 Pls
6885 2530 Pls
6892 2685 Pls
6898 3107 Pls
6905 4365 Pls
6911 3498 Pls
6917 3262 Pls
6924 3573 Pls
6930 1484 Pls
6936 3592 Pls
6943 2313 Pls
6949 1911 Pls
6956 2316 Pls
6594 4739 Pls
1.000 UL
LTb
574 4872 N
574 280 L
6388 0 V
0 4592 V
-6388 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
