%!PS-Adobe-2.0
%%Title: 0-10.dat.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu Sep 23 16:16:39 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (0-10.dat.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Atila Romero,aluno_grad,144679,\(\)- )
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Sep 23 16:16:39 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6157 0 R
-63 0 V
stroke
658 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
742 1198 M
63 0 V
6157 0 R
-63 0 V
stroke
658 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5000)]
] -46.7 MRshow
1.000 UL
LTb
742 2117 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
1.000 UL
LTb
742 3035 M
63 0 V
6157 0 R
-63 0 V
stroke
658 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15000)]
] -46.7 MRshow
1.000 UL
LTb
742 3954 M
63 0 V
6157 0 R
-63 0 V
stroke
658 3954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MRshow
1.000 UL
LTb
742 4872 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25000)]
] -46.7 MRshow
1.000 UL
LTb
742 280 M
0 63 V
0 4529 R
0 -63 V
stroke
742 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1779 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1779 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
2815 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2815 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
3852 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3852 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
1.000 UL
LTb
4889 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4889 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
5925 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5925 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6962 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
742 4872 N
742 280 L
6220 0 V
0 4592 V
-6220 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (exp\(x\))]
] -46.7 MRshow
LT0
742 280 Pls
794 280 Pls
846 280 Pls
898 280 Pls
949 280 Pls
1001 280 Pls
1053 280 Pls
1105 280 Pls
1157 280 Pls
1209 280 Pls
1260 280 Pls
1312 281 Pls
1364 281 Pls
1416 281 Pls
1468 281 Pls
1520 281 Pls
1571 281 Pls
1623 281 Pls
1675 281 Pls
1727 281 Pls
1779 281 Pls
1831 281 Pls
1882 282 Pls
1934 282 Pls
1986 282 Pls
2038 282 Pls
2090 282 Pls
2142 283 Pls
2193 283 Pls
2245 283 Pls
2297 284 Pls
2349 284 Pls
2401 285 Pls
2452 285 Pls
2504 286 Pls
2556 286 Pls
2608 287 Pls
2660 287 Pls
2712 288 Pls
2763 289 Pls
2815 290 Pls
2867 291 Pls
2919 292 Pls
2971 294 Pls
3023 295 Pls
3074 296 Pls
3126 298 Pls
3178 300 Pls
3230 302 Pls
3282 305 Pls
3334 307 Pls
3385 310 Pls
3437 313 Pls
3489 316 Pls
3541 320 Pls
3593 324 Pls
3645 329 Pls
3696 334 Pls
3748 340 Pls
3800 346 Pls
3852 353 Pls
3904 360 Pls
3956 368 Pls
4007 377 Pls
4059 387 Pls
4111 398 Pls
4163 410 Pls
4215 423 Pls
4267 438 Pls
4318 453 Pls
4370 471 Pls
4422 490 Pls
4474 511 Pls
4526 533 Pls
4578 558 Pls
4629 586 Pls
4681 616 Pls
4733 649 Pls
4785 684 Pls
4837 723 Pls
4889 766 Pls
4940 813 Pls
4992 864 Pls
5044 919 Pls
5096 980 Pls
5148 1046 Pls
5200 1118 Pls
5251 1196 Pls
5303 1282 Pls
5355 1374 Pls
5407 1475 Pls
5459 1585 Pls
5511 1704 Pls
5562 1833 Pls
5614 1973 Pls
5666 2125 Pls
5718 2290 Pls
5770 2469 Pls
5822 2663 Pls
5874 2872 Pls
5925 3099 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (exp\(x\) com long double)]
] -46.7 MRshow
LT1
742 280 Crs
794 280 Crs
846 280 Crs
898 280 Crs
949 280 Crs
1001 280 Crs
1053 280 Crs
1105 280 Crs
1157 280 Crs
1209 280 Crs
1260 280 Crs
1312 281 Crs
1364 281 Crs
1416 281 Crs
1468 281 Crs
1520 281 Crs
1571 281 Crs
1623 281 Crs
1675 281 Crs
1727 281 Crs
1779 281 Crs
1831 281 Crs
1882 282 Crs
1934 282 Crs
1986 282 Crs
2038 282 Crs
2090 282 Crs
2142 283 Crs
2193 283 Crs
2245 283 Crs
2297 284 Crs
2349 284 Crs
2401 285 Crs
2452 285 Crs
2504 286 Crs
2556 286 Crs
2608 287 Crs
2660 287 Crs
2712 288 Crs
2763 289 Crs
2815 290 Crs
2867 291 Crs
2919 292 Crs
2971 294 Crs
3023 295 Crs
3074 297 Crs
3126 298 Crs
3178 300 Crs
3230 302 Crs
3282 305 Crs
3334 307 Crs
3385 310 Crs
3437 313 Crs
3489 317 Crs
3541 321 Crs
3593 325 Crs
3645 330 Crs
3696 335 Crs
3748 341 Crs
3800 347 Crs
3852 354 Crs
3904 362 Crs
3956 371 Crs
4007 380 Crs
4059 391 Crs
4111 402 Crs
4163 415 Crs
4215 429 Crs
4267 445 Crs
4318 462 Crs
4370 481 Crs
4422 503 Crs
4474 526 Crs
4526 552 Crs
4578 580 Crs
4629 612 Crs
4681 647 Crs
4733 686 Crs
4785 728 Crs
4837 775 Crs
4889 827 Crs
4940 885 Crs
4992 949 Crs
5044 1019 Crs
5096 1096 Crs
5148 1182 Crs
5200 1277 Crs
5251 1382 Crs
5303 1498 Crs
5355 1625 Crs
5407 1767 Crs
5459 1923 Crs
5511 2095 Crs
5562 2286 Crs
5614 2497 Crs
5666 2729 Crs
5718 2986 Crs
5770 3270 Crs
5822 3583 Crs
5874 3929 Crs
5925 4312 Crs
6594 4599 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (algoritmo otimizado\(x\))]
] -46.7 MRshow
LT2
742 280 Star
794 280 Star
846 280 Star
898 280 Star
949 280 Star
1001 280 Star
1053 280 Star
1105 280 Star
1157 280 Star
1209 280 Star
1260 280 Star
1312 281 Star
1364 281 Star
1416 281 Star
1468 281 Star
1520 281 Star
1571 281 Star
1623 281 Star
1675 281 Star
1727 281 Star
1779 281 Star
1831 281 Star
1882 282 Star
1934 282 Star
1986 282 Star
2038 282 Star
2090 282 Star
2142 283 Star
2193 283 Star
2245 283 Star
2297 284 Star
2349 284 Star
2401 285 Star
2452 285 Star
2504 286 Star
2556 286 Star
2608 287 Star
2660 287 Star
2712 288 Star
2763 289 Star
2815 290 Star
2867 291 Star
2919 292 Star
2971 294 Star
3023 295 Star
3074 297 Star
3126 298 Star
3178 300 Star
3230 302 Star
3282 305 Star
3334 307 Star
3385 310 Star
3437 313 Star
3489 317 Star
3541 321 Star
3593 325 Star
3645 330 Star
3696 335 Star
3748 341 Star
3800 347 Star
3852 354 Star
3904 362 Star
3956 371 Star
4007 380 Star
4059 391 Star
4111 402 Star
4163 415 Star
4215 429 Star
4267 445 Star
4318 462 Star
4370 481 Star
4422 503 Star
4474 526 Star
4526 552 Star
4578 580 Star
4629 612 Star
4681 647 Star
4733 686 Star
4785 728 Star
4837 775 Star
4889 828 Star
4940 885 Star
4992 949 Star
5044 1019 Star
5096 1097 Star
5148 1183 Star
5200 1278 Star
5251 1383 Star
5303 1499 Star
5355 1627 Star
5407 1768 Star
5459 1925 Star
5511 2098 Star
5562 2289 Star
5614 2500 Star
5666 2734 Star
5718 2992 Star
5770 3277 Star
5822 3592 Star
5874 3941 Star
5925 4326 Star
6594 4459 Star
1.000 UL
LT3
LTb
6311 4319 M
[ [(Helvetica) 140.0 0.0 true true 0 (exp\(x\) do gnuplot)]
] -46.7 MRshow
LT3
6395 4319 M
399 0 V
742 280 M
52 0 V
53 0 V
52 0 V
52 0 V
53 0 V
52 0 V
52 0 V
53 0 V
52 0 V
53 1 V
52 0 V
52 0 V
53 0 V
52 0 V
52 0 V
53 0 V
52 0 V
52 0 V
53 0 V
52 0 V
52 1 V
53 0 V
52 0 V
53 0 V
52 0 V
52 1 V
53 0 V
52 0 V
52 0 V
53 1 V
52 0 V
52 1 V
53 0 V
52 1 V
52 0 V
53 1 V
52 1 V
53 1 V
52 0 V
52 1 V
53 2 V
52 1 V
52 1 V
53 2 V
52 1 V
52 2 V
53 2 V
52 2 V
52 3 V
53 3 V
52 3 V
53 3 V
52 4 V
52 4 V
53 5 V
52 5 V
52 5 V
53 6 V
52 7 V
52 8 V
53 8 V
52 9 V
52 11 V
53 11 V
52 12 V
53 14 V
52 16 V
52 17 V
53 18 V
52 21 V
52 23 V
53 26 V
52 28 V
52 31 V
53 34 V
52 38 V
52 42 V
53 47 V
52 52 V
53 57 V
52 63 V
52 70 V
53 77 V
52 85 V
52 95 V
53 104 V
52 116 V
52 128 V
53 141 V
52 157 V
52 173 V
53 192 V
52 212 V
53 235 V
52 259 V
52 287 V
53 318 V
52 351 V
52 389 V
stroke
LTb
742 4872 N
742 280 L
6220 0 V
0 4592 V
-6220 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
