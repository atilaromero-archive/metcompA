%!PS-Adobe-2.0
%%Title: 0-20.dat.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu Sep 23 16:16:20 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (0-20.dat.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Atila Romero,aluno_grad,144679,\(\)- )
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Sep 23 16:16:20 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
910 280 M
63 0 V
5989 0 R
-63 0 V
stroke
826 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
910 739 M
63 0 V
5989 0 R
-63 0 V
stroke
826 739 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5e+07)]
] -46.7 MRshow
1.000 UL
LTb
910 1198 M
63 0 V
5989 0 R
-63 0 V
stroke
826 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 1658 M
63 0 V
5989 0 R
-63 0 V
stroke
826 1658 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 2117 M
63 0 V
5989 0 R
-63 0 V
stroke
826 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 2576 M
63 0 V
5989 0 R
-63 0 V
stroke
826 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 3035 M
63 0 V
5989 0 R
-63 0 V
stroke
826 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 3494 M
63 0 V
5989 0 R
-63 0 V
stroke
826 3494 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 3954 M
63 0 V
5989 0 R
-63 0 V
stroke
826 3954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 4413 M
63 0 V
5989 0 R
-63 0 V
stroke
826 4413 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4.5e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 4872 M
63 0 V
5989 0 R
-63 0 V
stroke
826 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5e+08)]
] -46.7 MRshow
1.000 UL
LTb
910 280 M
0 63 V
0 4529 R
0 -63 V
stroke
910 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2120 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2120 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
3331 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3331 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
4541 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4541 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
5752 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5752 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6962 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
910 4872 N
910 280 L
6052 0 V
0 4592 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (exp\(x\))]
] -46.7 MRshow
LT0
910 280 Pls
934 280 Pls
958 280 Pls
983 280 Pls
1007 280 Pls
1031 280 Pls
1055 280 Pls
1079 280 Pls
1104 280 Pls
1128 280 Pls
1152 280 Pls
1176 280 Pls
1200 280 Pls
1225 280 Pls
1249 280 Pls
1273 280 Pls
1297 280 Pls
1322 280 Pls
1346 280 Pls
1370 280 Pls
1394 280 Pls
1418 280 Pls
1443 280 Pls
1467 280 Pls
1491 280 Pls
1515 280 Pls
1539 280 Pls
1564 280 Pls
1588 280 Pls
1612 280 Pls
1636 280 Pls
1660 280 Pls
1685 280 Pls
1709 280 Pls
1733 280 Pls
1757 280 Pls
1781 280 Pls
1806 280 Pls
1830 280 Pls
1854 280 Pls
1878 280 Pls
1903 280 Pls
1927 280 Pls
1951 280 Pls
1975 280 Pls
1999 280 Pls
2024 280 Pls
2048 280 Pls
2072 280 Pls
2096 280 Pls
2120 280 Pls
2145 280 Pls
2169 280 Pls
2193 280 Pls
2217 280 Pls
2241 280 Pls
2266 280 Pls
2290 280 Pls
2314 280 Pls
2338 280 Pls
2362 280 Pls
2387 280 Pls
2411 280 Pls
2435 280 Pls
2459 280 Pls
2484 280 Pls
2508 280 Pls
2532 280 Pls
2556 280 Pls
2580 280 Pls
2605 280 Pls
2629 280 Pls
2653 280 Pls
2677 280 Pls
2701 280 Pls
2726 280 Pls
2750 280 Pls
2774 280 Pls
2798 280 Pls
2822 280 Pls
2847 280 Pls
2871 280 Pls
2895 280 Pls
2919 280 Pls
2943 280 Pls
2968 280 Pls
2992 280 Pls
3016 280 Pls
3040 280 Pls
3065 280 Pls
3089 280 Pls
3113 280 Pls
3137 280 Pls
3161 280 Pls
3186 280 Pls
3210 280 Pls
3234 280 Pls
3258 280 Pls
3282 280 Pls
3307 280 Pls
3331 280 Pls
3355 280 Pls
3379 280 Pls
3403 280 Pls
3428 280 Pls
3452 280 Pls
3476 280 Pls
3500 280 Pls
3524 280 Pls
3549 280 Pls
3573 280 Pls
3597 280 Pls
3621 280 Pls
3646 280 Pls
3670 280 Pls
3694 280 Pls
3718 281 Pls
3742 281 Pls
3767 281 Pls
3791 281 Pls
3815 281 Pls
3839 281 Pls
3863 281 Pls
3888 281 Pls
3912 281 Pls
3936 281 Pls
3960 281 Pls
3984 281 Pls
4009 281 Pls
4033 281 Pls
4057 281 Pls
4081 282 Pls
4105 282 Pls
4130 282 Pls
4154 282 Pls
4178 282 Pls
4202 282 Pls
4226 282 Pls
4251 283 Pls
4275 283 Pls
4299 283 Pls
4323 283 Pls
4348 283 Pls
4372 284 Pls
4396 284 Pls
4420 284 Pls
4444 284 Pls
4469 285 Pls
4493 285 Pls
4517 285 Pls
4541 286 Pls
4565 286 Pls
4590 286 Pls
4614 287 Pls
4638 287 Pls
4662 288 Pls
4686 288 Pls
4711 289 Pls
4735 289 Pls
4759 290 Pls
4783 290 Pls
4807 291 Pls
4832 292 Pls
4856 292 Pls
4880 293 Pls
4904 294 Pls
4929 295 Pls
4953 296 Pls
4977 297 Pls
5001 298 Pls
5025 299 Pls
5050 300 Pls
5074 301 Pls
5098 302 Pls
5122 304 Pls
5146 305 Pls
5171 306 Pls
5195 308 Pls
5219 310 Pls
5243 311 Pls
5267 313 Pls
5292 315 Pls
5316 317 Pls
5340 319 Pls
5364 321 Pls
5388 324 Pls
5413 326 Pls
5437 328 Pls
5461 331 Pls
5485 334 Pls
5510 337 Pls
5534 340 Pls
5558 343 Pls
5582 347 Pls
5606 350 Pls
5631 354 Pls
5655 358 Pls
5679 362 Pls
5703 366 Pls
5727 371 Pls
5752 375 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (exp\(x\) com long double)]
] -46.7 MRshow
LT1
910 280 Crs
934 280 Crs
958 280 Crs
983 280 Crs
1007 280 Crs
1031 280 Crs
1055 280 Crs
1079 280 Crs
1104 280 Crs
1128 280 Crs
1152 280 Crs
1176 280 Crs
1200 280 Crs
1225 280 Crs
1249 280 Crs
1273 280 Crs
1297 280 Crs
1322 280 Crs
1346 280 Crs
1370 280 Crs
1394 280 Crs
1418 280 Crs
1443 280 Crs
1467 280 Crs
1491 280 Crs
1515 280 Crs
1539 280 Crs
1564 280 Crs
1588 280 Crs
1612 280 Crs
1636 280 Crs
1660 280 Crs
1685 280 Crs
1709 280 Crs
1733 280 Crs
1757 280 Crs
1781 280 Crs
1806 280 Crs
1830 280 Crs
1854 280 Crs
1878 280 Crs
1903 280 Crs
1927 280 Crs
1951 280 Crs
1975 280 Crs
1999 280 Crs
2024 280 Crs
2048 280 Crs
2072 280 Crs
2096 280 Crs
2120 280 Crs
2145 280 Crs
2169 280 Crs
2193 280 Crs
2217 280 Crs
2241 280 Crs
2266 280 Crs
2290 280 Crs
2314 280 Crs
2338 280 Crs
2362 280 Crs
2387 280 Crs
2411 280 Crs
2435 280 Crs
2459 280 Crs
2484 280 Crs
2508 280 Crs
2532 280 Crs
2556 280 Crs
2580 280 Crs
2605 280 Crs
2629 280 Crs
2653 280 Crs
2677 280 Crs
2701 280 Crs
2726 280 Crs
2750 280 Crs
2774 280 Crs
2798 280 Crs
2822 280 Crs
2847 280 Crs
2871 280 Crs
2895 280 Crs
2919 280 Crs
2943 280 Crs
2968 280 Crs
2992 280 Crs
3016 280 Crs
3040 280 Crs
3065 280 Crs
3089 280 Crs
3113 280 Crs
3137 280 Crs
3161 280 Crs
3186 280 Crs
3210 280 Crs
3234 280 Crs
3258 280 Crs
3282 280 Crs
3307 280 Crs
3331 280 Crs
3355 280 Crs
3379 280 Crs
3403 280 Crs
3428 280 Crs
3452 280 Crs
3476 280 Crs
3500 280 Crs
3524 280 Crs
3549 280 Crs
3573 281 Crs
3597 281 Crs
3621 281 Crs
3646 281 Crs
3670 281 Crs
3694 281 Crs
3718 281 Crs
3742 281 Crs
3767 281 Crs
3791 281 Crs
3815 281 Crs
3839 282 Crs
3863 282 Crs
3888 282 Crs
3912 282 Crs
3936 282 Crs
3960 283 Crs
3984 283 Crs
4009 283 Crs
4033 284 Crs
4057 284 Crs
4081 284 Crs
4105 285 Crs
4130 285 Crs
4154 286 Crs
4178 286 Crs
4202 287 Crs
4226 288 Crs
4251 288 Crs
4275 289 Crs
4299 290 Crs
4323 291 Crs
4348 292 Crs
4372 294 Crs
4396 295 Crs
4420 296 Crs
4444 298 Crs
4469 300 Crs
4493 302 Crs
4517 304 Crs
4541 306 Crs
4565 309 Crs
4590 312 Crs
4614 315 Crs
4638 318 Crs
4662 322 Crs
4686 326 Crs
4711 330 Crs
4735 335 Crs
4759 340 Crs
4783 346 Crs
4807 353 Crs
4832 360 Crs
4856 367 Crs
4880 375 Crs
4904 384 Crs
4929 394 Crs
4953 405 Crs
4977 417 Crs
5001 429 Crs
5025 443 Crs
5050 459 Crs
5074 475 Crs
5098 493 Crs
5122 513 Crs
5146 534 Crs
5171 557 Crs
5195 583 Crs
5219 610 Crs
5243 640 Crs
5267 673 Crs
5292 708 Crs
5316 746 Crs
5340 788 Crs
5364 833 Crs
5388 883 Crs
5413 936 Crs
5437 994 Crs
5461 1057 Crs
5485 1125 Crs
5510 1199 Crs
5534 1279 Crs
5558 1366 Crs
5582 1460 Crs
5606 1562 Crs
5631 1672 Crs
5655 1792 Crs
5679 1921 Crs
5703 2061 Crs
5727 2212 Crs
5752 2375 Crs
6594 4599 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (algoritmo otimizado\(x\))]
] -46.7 MRshow
LT2
910 280 Star
934 280 Star
958 280 Star
983 280 Star
1007 280 Star
1031 280 Star
1055 280 Star
1079 280 Star
1104 280 Star
1128 280 Star
1152 280 Star
1176 280 Star
1200 280 Star
1225 280 Star
1249 280 Star
1273 280 Star
1297 280 Star
1322 280 Star
1346 280 Star
1370 280 Star
1394 280 Star
1418 280 Star
1443 280 Star
1467 280 Star
1491 280 Star
1515 280 Star
1539 280 Star
1564 280 Star
1588 280 Star
1612 280 Star
1636 280 Star
1660 280 Star
1685 280 Star
1709 280 Star
1733 280 Star
1757 280 Star
1781 280 Star
1806 280 Star
1830 280 Star
1854 280 Star
1878 280 Star
1903 280 Star
1927 280 Star
1951 280 Star
1975 280 Star
1999 280 Star
2024 280 Star
2048 280 Star
2072 280 Star
2096 280 Star
2120 280 Star
2145 280 Star
2169 280 Star
2193 280 Star
2217 280 Star
2241 280 Star
2266 280 Star
2290 280 Star
2314 280 Star
2338 280 Star
2362 280 Star
2387 280 Star
2411 280 Star
2435 280 Star
2459 280 Star
2484 280 Star
2508 280 Star
2532 280 Star
2556 280 Star
2580 280 Star
2605 280 Star
2629 280 Star
2653 280 Star
2677 280 Star
2701 280 Star
2726 280 Star
2750 280 Star
2774 280 Star
2798 280 Star
2822 280 Star
2847 280 Star
2871 280 Star
2895 280 Star
2919 280 Star
2943 280 Star
2968 280 Star
2992 280 Star
3016 280 Star
3040 280 Star
3065 280 Star
3089 280 Star
3113 280 Star
3137 280 Star
3161 280 Star
3186 280 Star
3210 280 Star
3234 280 Star
3258 280 Star
3282 280 Star
3307 280 Star
3331 280 Star
3355 280 Star
3379 280 Star
3403 280 Star
3428 280 Star
3452 280 Star
3476 280 Star
3500 280 Star
3524 280 Star
3549 280 Star
3573 281 Star
3597 281 Star
3621 281 Star
3646 281 Star
3670 281 Star
3694 281 Star
3718 281 Star
3742 281 Star
3767 281 Star
3791 281 Star
3815 281 Star
3839 282 Star
3863 282 Star
3888 282 Star
3912 282 Star
3936 282 Star
3960 283 Star
3984 283 Star
4009 283 Star
4033 284 Star
4057 284 Star
4081 284 Star
4105 285 Star
4130 285 Star
4154 286 Star
4178 287 Star
4202 287 Star
4226 288 Star
4251 289 Star
4275 290 Star
4299 291 Star
4323 292 Star
4348 293 Star
4372 295 Star
4396 296 Star
4420 298 Star
4444 300 Star
4469 302 Star
4493 305 Star
4517 307 Star
4541 310 Star
4565 313 Star
4590 317 Star
4614 321 Star
4638 325 Star
4662 330 Star
4686 335 Star
4711 340 Star
4735 347 Star
4759 354 Star
4783 362 Star
4807 370 Star
4832 380 Star
4856 390 Star
4880 402 Star
4904 415 Star
4929 429 Star
4953 444 Star
4977 462 Star
5001 481 Star
5025 502 Star
5050 525 Star
5074 551 Star
5098 579 Star
5122 611 Star
5146 646 Star
5171 684 Star
5195 727 Star
5219 774 Star
5243 826 Star
5267 883 Star
5292 946 Star
5316 1017 Star
5340 1094 Star
5364 1180 Star
5388 1274 Star
5413 1379 Star
5437 1494 Star
5461 1622 Star
5485 1763 Star
5510 1919 Star
5534 2092 Star
5558 2282 Star
5582 2493 Star
5606 2725 Star
5631 2983 Star
5655 3267 Star
5679 3581 Star
5703 3928 Star
5727 4312 Star
5752 4736 Star
6594 4459 Star
1.000 UL
LT3
LTb
6311 4319 M
[ [(Helvetica) 140.0 0.0 true true 0 (exp\(x\) do gnuplot)]
] -46.7 MRshow
LT3
6395 4319 M
399 0 V
910 280 M
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 0 V
49 1 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 1 V
49 0 V
49 1 V
49 0 V
49 1 V
49 1 V
49 1 V
49 1 V
49 1 V
48 2 V
49 3 V
49 3 V
49 3 V
49 4 V
49 6 V
49 6 V
49 8 V
49 9 V
49 12 V
49 14 V
48 18 V
49 21 V
49 27 V
49 32 V
49 39 V
49 48 V
49 59 V
49 73 V
49 88 V
49 108 V
48 132 V
49 162 V
49 198 V
49 243 V
49 297 V
49 363 V
49 445 V
49 544 V
49 666 V
49 815 V
stroke
LTb
910 4872 N
910 280 L
6052 0 V
0 4592 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
